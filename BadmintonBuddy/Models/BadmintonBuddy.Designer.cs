//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BadmintonBuddyModel", "FK_City_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BadmintonBuddy.Models.State), "City", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BadmintonBuddy.Models.City), true)]
[assembly: EdmRelationshipAttribute("BadmintonBuddyModel", "FK_Clubs_City", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BadmintonBuddy.Models.City), "Clubs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BadmintonBuddy.Models.Club), true)]
[assembly: EdmRelationshipAttribute("BadmintonBuddyModel", "FK_Clubs_Surface", "Surface", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BadmintonBuddy.Models.Surface), "Clubs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BadmintonBuddy.Models.Club), true)]
[assembly: EdmRelationshipAttribute("BadmintonBuddyModel", "FK_Metadata_Clubs", "Clubs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BadmintonBuddy.Models.Club), "Metadata", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BadmintonBuddy.Models.Metadata), true)]
[assembly: EdmRelationshipAttribute("BadmintonBuddyModel", "FK_State_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BadmintonBuddy.Models.Country), "State", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BadmintonBuddy.Models.State), true)]
[assembly: EdmRelationshipAttribute("BadmintonBuddyModel", "ClubToCoach", "Clubs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BadmintonBuddy.Models.Club), "Coach", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BadmintonBuddy.Models.Coach))]
[assembly: EdmRelationshipAttribute("BadmintonBuddyModel", "webpages_UsersInRoles", "webpages_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BadmintonBuddy.Models.webpages_Roles), "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BadmintonBuddy.Models.UserProfile))]

#endregion

namespace BadmintonBuddy.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BadmintonBuddyEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BadmintonBuddyEntities object using the connection string found in the 'BadmintonBuddyEntities' section of the application configuration file.
        /// </summary>
        public BadmintonBuddyEntities() : base("name=BadmintonBuddyEntities", "BadmintonBuddyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BadmintonBuddyEntities object.
        /// </summary>
        public BadmintonBuddyEntities(string connectionString) : base(connectionString, "BadmintonBuddyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BadmintonBuddyEntities object.
        /// </summary>
        public BadmintonBuddyEntities(EntityConnection connection) : base(connection, "BadmintonBuddyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdditionalClubInfo> AdditionalClubInfoes
        {
            get
            {
                if ((_AdditionalClubInfoes == null))
                {
                    _AdditionalClubInfoes = base.CreateObjectSet<AdditionalClubInfo>("AdditionalClubInfoes");
                }
                return _AdditionalClubInfoes;
            }
        }
        private ObjectSet<AdditionalClubInfo> _AdditionalClubInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<City> Cities
        {
            get
            {
                if ((_Cities == null))
                {
                    _Cities = base.CreateObjectSet<City>("Cities");
                }
                return _Cities;
            }
        }
        private ObjectSet<City> _Cities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Club> Clubs
        {
            get
            {
                if ((_Clubs == null))
                {
                    _Clubs = base.CreateObjectSet<Club>("Clubs");
                }
                return _Clubs;
            }
        }
        private ObjectSet<Club> _Clubs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Coach> Coaches
        {
            get
            {
                if ((_Coaches == null))
                {
                    _Coaches = base.CreateObjectSet<Coach>("Coaches");
                }
                return _Coaches;
            }
        }
        private ObjectSet<Coach> _Coaches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Metadata> Metadatas
        {
            get
            {
                if ((_Metadatas == null))
                {
                    _Metadatas = base.CreateObjectSet<Metadata>("Metadatas");
                }
                return _Metadatas;
            }
        }
        private ObjectSet<Metadata> _Metadatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<State> States
        {
            get
            {
                if ((_States == null))
                {
                    _States = base.CreateObjectSet<State>("States");
                }
                return _States;
            }
        }
        private ObjectSet<State> _States;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Surface> Surfaces
        {
            get
            {
                if ((_Surfaces == null))
                {
                    _Surfaces = base.CreateObjectSet<Surface>("Surfaces");
                }
                return _Surfaces;
            }
        }
        private ObjectSet<Surface> _Surfaces;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserProfile> UserProfiles
        {
            get
            {
                if ((_UserProfiles == null))
                {
                    _UserProfiles = base.CreateObjectSet<UserProfile>("UserProfiles");
                }
                return _UserProfiles;
            }
        }
        private ObjectSet<UserProfile> _UserProfiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<webpages_Membership> webpages_Membership
        {
            get
            {
                if ((_webpages_Membership == null))
                {
                    _webpages_Membership = base.CreateObjectSet<webpages_Membership>("webpages_Membership");
                }
                return _webpages_Membership;
            }
        }
        private ObjectSet<webpages_Membership> _webpages_Membership;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<webpages_OAuthMembership> webpages_OAuthMembership
        {
            get
            {
                if ((_webpages_OAuthMembership == null))
                {
                    _webpages_OAuthMembership = base.CreateObjectSet<webpages_OAuthMembership>("webpages_OAuthMembership");
                }
                return _webpages_OAuthMembership;
            }
        }
        private ObjectSet<webpages_OAuthMembership> _webpages_OAuthMembership;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<webpages_Roles> webpages_Roles
        {
            get
            {
                if ((_webpages_Roles == null))
                {
                    _webpages_Roles = base.CreateObjectSet<webpages_Roles>("webpages_Roles");
                }
                return _webpages_Roles;
            }
        }
        private ObjectSet<webpages_Roles> _webpages_Roles;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdditionalClubInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdditionalClubInfoes(AdditionalClubInfo additionalClubInfo)
        {
            base.AddObject("AdditionalClubInfoes", additionalClubInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCities(City city)
        {
            base.AddObject("Cities", city);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Clubs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClubs(Club club)
        {
            base.AddObject("Clubs", club);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Coaches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCoaches(Coach coach)
        {
            base.AddObject("Coaches", coach);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Metadatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMetadatas(Metadata metadata)
        {
            base.AddObject("Metadatas", metadata);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the States EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStates(State state)
        {
            base.AddObject("States", state);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Surfaces EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSurfaces(Surface surface)
        {
            base.AddObject("Surfaces", surface);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserProfiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserProfiles(UserProfile userProfile)
        {
            base.AddObject("UserProfiles", userProfile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the webpages_Membership EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTowebpages_Membership(webpages_Membership webpages_Membership)
        {
            base.AddObject("webpages_Membership", webpages_Membership);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the webpages_OAuthMembership EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTowebpages_OAuthMembership(webpages_OAuthMembership webpages_OAuthMembership)
        {
            base.AddObject("webpages_OAuthMembership", webpages_OAuthMembership);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the webpages_Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTowebpages_Roles(webpages_Roles webpages_Roles)
        {
            base.AddObject("webpages_Roles", webpages_Roles);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BadmintonBuddyModel", Name="AdditionalClubInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdditionalClubInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdditionalClubInfo object.
        /// </summary>
        /// <param name="itemID">Initial value of the ItemID property.</param>
        /// <param name="isRead">Initial value of the isRead property.</param>
        public static AdditionalClubInfo CreateAdditionalClubInfo(global::System.Int32 itemID, global::System.Boolean isRead)
        {
            AdditionalClubInfo additionalClubInfo = new AdditionalClubInfo();
            additionalClubInfo.ItemID = itemID;
            additionalClubInfo.isRead = isRead;
            return additionalClubInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Int32 _ItemID;
        partial void OnItemIDChanging(global::System.Int32 value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CourtName
        {
            get
            {
                return _CourtName;
            }
            set
            {
                OnCourtNameChanging(value);
                ReportPropertyChanging("CourtName");
                _CourtName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CourtName");
                OnCourtNameChanged();
            }
        }
        private global::System.String _CourtName;
        partial void OnCourtNameChanging(global::System.String value);
        partial void OnCourtNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdditionalInfo
        {
            get
            {
                return _AdditionalInfo;
            }
            set
            {
                OnAdditionalInfoChanging(value);
                ReportPropertyChanging("AdditionalInfo");
                _AdditionalInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AdditionalInfo");
                OnAdditionalInfoChanged();
            }
        }
        private global::System.String _AdditionalInfo;
        partial void OnAdditionalInfoChanging(global::System.String value);
        partial void OnAdditionalInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isRead
        {
            get
            {
                return _isRead;
            }
            set
            {
                OnisReadChanging(value);
                ReportPropertyChanging("isRead");
                _isRead = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isRead");
                OnisReadChanged();
            }
        }
        private global::System.Boolean _isRead;
        partial void OnisReadChanging(global::System.Boolean value);
        partial void OnisReadChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BadmintonBuddyModel", Name="City")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class City : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new City object.
        /// </summary>
        /// <param name="cityID">Initial value of the CityID property.</param>
        /// <param name="cityName">Initial value of the CityName property.</param>
        /// <param name="stateID">Initial value of the StateID property.</param>
        public static City CreateCity(global::System.Int32 cityID, global::System.String cityName, global::System.Int32 stateID)
        {
            City city = new City();
            city.CityID = cityID;
            city.CityName = cityName;
            city.StateID = stateID;
            return city;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                if (_CityID != value)
                {
                    OnCityIDChanging(value);
                    ReportPropertyChanging("CityID");
                    _CityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CityID");
                    OnCityIDChanged();
                }
            }
        }
        private global::System.Int32 _CityID;
        partial void OnCityIDChanging(global::System.Int32 value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CityName
        {
            get
            {
                return _CityName;
            }
            set
            {
                OnCityNameChanging(value);
                ReportPropertyChanging("CityName");
                _CityName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CityName");
                OnCityNameChanged();
            }
        }
        private global::System.String _CityName;
        partial void OnCityNameChanging(global::System.String value);
        partial void OnCityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                OnStateIDChanging(value);
                ReportPropertyChanging("StateID");
                _StateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateID");
                OnStateIDChanged();
            }
        }
        private global::System.Int32 _StateID;
        partial void OnStateIDChanging(global::System.Int32 value);
        partial void OnStateIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BadmintonBuddyModel", "FK_City_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("BadmintonBuddyModel.FK_City_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("BadmintonBuddyModel.FK_City_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("BadmintonBuddyModel.FK_City_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("BadmintonBuddyModel.FK_City_State", "State", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BadmintonBuddyModel", "FK_Clubs_City", "Clubs")]
        public EntityCollection<Club> Clubs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Club>("BadmintonBuddyModel.FK_Clubs_City", "Clubs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Club>("BadmintonBuddyModel.FK_Clubs_City", "Clubs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BadmintonBuddyModel", Name="Club")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Club : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Club object.
        /// </summary>
        /// <param name="clubID">Initial value of the ClubID property.</param>
        /// <param name="clubName">Initial value of the ClubName property.</param>
        /// <param name="cityID">Initial value of the CityID property.</param>
        public static Club CreateClub(global::System.Int32 clubID, global::System.String clubName, global::System.Int32 cityID)
        {
            Club club = new Club();
            club.ClubID = clubID;
            club.ClubName = clubName;
            club.CityID = cityID;
            return club;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClubID
        {
            get
            {
                return _ClubID;
            }
            set
            {
                if (_ClubID != value)
                {
                    OnClubIDChanging(value);
                    ReportPropertyChanging("ClubID");
                    _ClubID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClubID");
                    OnClubIDChanged();
                }
            }
        }
        private global::System.Int32 _ClubID;
        partial void OnClubIDChanging(global::System.Int32 value);
        partial void OnClubIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClubName
        {
            get
            {
                return _ClubName;
            }
            set
            {
                OnClubNameChanging(value);
                ReportPropertyChanging("ClubName");
                _ClubName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClubName");
                OnClubNameChanged();
            }
        }
        private global::System.String _ClubName;
        partial void OnClubNameChanging(global::System.String value);
        partial void OnClubNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Area
        {
            get
            {
                return _Area;
            }
            set
            {
                OnAreaChanging(value);
                ReportPropertyChanging("Area");
                _Area = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Area");
                OnAreaChanged();
            }
        }
        private global::System.String _Area;
        partial void OnAreaChanging(global::System.String value);
        partial void OnAreaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private global::System.Int32 _CityID;
        partial void OnCityIDChanging(global::System.Int32 value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SurfaceID
        {
            get
            {
                return _SurfaceID;
            }
            set
            {
                OnSurfaceIDChanging(value);
                ReportPropertyChanging("SurfaceID");
                _SurfaceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SurfaceID");
                OnSurfaceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SurfaceID;
        partial void OnSurfaceIDChanging(Nullable<global::System.Int32> value);
        partial void OnSurfaceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fees
        {
            get
            {
                return _Fees;
            }
            set
            {
                OnFeesChanging(value);
                ReportPropertyChanging("Fees");
                _Fees = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fees");
                OnFeesChanged();
            }
        }
        private global::System.String _Fees;
        partial void OnFeesChanging(global::System.String value);
        partial void OnFeesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactNo
        {
            get
            {
                return _ContactNo;
            }
            set
            {
                OnContactNoChanging(value);
                ReportPropertyChanging("ContactNo");
                _ContactNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactNo");
                OnContactNoChanged();
            }
        }
        private global::System.String _ContactNo;
        partial void OnContactNoChanging(global::System.String value);
        partial void OnContactNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Timings
        {
            get
            {
                return _Timings;
            }
            set
            {
                OnTimingsChanging(value);
                ReportPropertyChanging("Timings");
                _Timings = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timings");
                OnTimingsChanged();
            }
        }
        private global::System.String _Timings;
        partial void OnTimingsChanging(global::System.String value);
        partial void OnTimingsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfCourts
        {
            get
            {
                return _NoOfCourts;
            }
            set
            {
                OnNoOfCourtsChanging(value);
                ReportPropertyChanging("NoOfCourts");
                _NoOfCourts = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfCourts");
                OnNoOfCourtsChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfCourts;
        partial void OnNoOfCourtsChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfCourtsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NearbyClub
        {
            get
            {
                return _NearbyClub;
            }
            set
            {
                OnNearbyClubChanging(value);
                ReportPropertyChanging("NearbyClub");
                _NearbyClub = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NearbyClub");
                OnNearbyClubChanged();
            }
        }
        private global::System.String _NearbyClub;
        partial void OnNearbyClubChanging(global::System.String value);
        partial void OnNearbyClubChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BadmintonBuddyModel", "FK_Clubs_City", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("BadmintonBuddyModel.FK_Clubs_City", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("BadmintonBuddyModel.FK_Clubs_City", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("BadmintonBuddyModel.FK_Clubs_City", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("BadmintonBuddyModel.FK_Clubs_City", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BadmintonBuddyModel", "FK_Clubs_Surface", "Surface")]
        public Surface Surface
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Surface>("BadmintonBuddyModel.FK_Clubs_Surface", "Surface").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Surface>("BadmintonBuddyModel.FK_Clubs_Surface", "Surface").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Surface> SurfaceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Surface>("BadmintonBuddyModel.FK_Clubs_Surface", "Surface");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Surface>("BadmintonBuddyModel.FK_Clubs_Surface", "Surface", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BadmintonBuddyModel", "FK_Metadata_Clubs", "Metadata")]
        public EntityCollection<Metadata> Metadatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Metadata>("BadmintonBuddyModel.FK_Metadata_Clubs", "Metadata");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Metadata>("BadmintonBuddyModel.FK_Metadata_Clubs", "Metadata", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BadmintonBuddyModel", "ClubToCoach", "Coach")]
        public EntityCollection<Coach> Coaches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Coach>("BadmintonBuddyModel.ClubToCoach", "Coach");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Coach>("BadmintonBuddyModel.ClubToCoach", "Coach", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BadmintonBuddyModel", Name="Coach")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Coach : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Coach object.
        /// </summary>
        /// <param name="coachID">Initial value of the CoachID property.</param>
        public static Coach CreateCoach(global::System.Int32 coachID)
        {
            Coach coach = new Coach();
            coach.CoachID = coachID;
            return coach;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CoachID
        {
            get
            {
                return _CoachID;
            }
            set
            {
                if (_CoachID != value)
                {
                    OnCoachIDChanging(value);
                    ReportPropertyChanging("CoachID");
                    _CoachID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CoachID");
                    OnCoachIDChanged();
                }
            }
        }
        private global::System.Int32 _CoachID;
        partial void OnCoachIDChanging(global::System.Int32 value);
        partial void OnCoachIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CoachName
        {
            get
            {
                return _CoachName;
            }
            set
            {
                OnCoachNameChanging(value);
                ReportPropertyChanging("CoachName");
                _CoachName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CoachName");
                OnCoachNameChanged();
            }
        }
        private global::System.String _CoachName;
        partial void OnCoachNameChanging(global::System.String value);
        partial void OnCoachNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Details
        {
            get
            {
                return _Details;
            }
            set
            {
                OnDetailsChanging(value);
                ReportPropertyChanging("Details");
                _Details = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Details");
                OnDetailsChanged();
            }
        }
        private global::System.String _Details;
        partial void OnDetailsChanging(global::System.String value);
        partial void OnDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageURL
        {
            get
            {
                return _ImageURL;
            }
            set
            {
                OnImageURLChanging(value);
                ReportPropertyChanging("ImageURL");
                _ImageURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageURL");
                OnImageURLChanged();
            }
        }
        private global::System.String _ImageURL;
        partial void OnImageURLChanging(global::System.String value);
        partial void OnImageURLChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BadmintonBuddyModel", "ClubToCoach", "Clubs")]
        public EntityCollection<Club> Clubs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Club>("BadmintonBuddyModel.ClubToCoach", "Clubs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Club>("BadmintonBuddyModel.ClubToCoach", "Clubs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BadmintonBuddyModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="countryName">Initial value of the CountryName property.</param>
        public static Country CreateCountry(global::System.Int32 countryID, global::System.String countryName)
        {
            Country country = new Country();
            country.CountryID = countryID;
            country.CountryName = countryName;
            return country;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BadmintonBuddyModel", "FK_State_Country", "State")]
        public EntityCollection<State> States
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<State>("BadmintonBuddyModel.FK_State_Country", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<State>("BadmintonBuddyModel.FK_State_Country", "State", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BadmintonBuddyModel", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="messageID">Initial value of the MessageID property.</param>
        /// <param name="messageType">Initial value of the MessageType property.</param>
        public static Message CreateMessage(global::System.Int32 messageID, global::System.String messageType)
        {
            Message message = new Message();
            message.MessageID = messageID;
            message.MessageType = messageType;
            return message;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageID
        {
            get
            {
                return _MessageID;
            }
            set
            {
                if (_MessageID != value)
                {
                    OnMessageIDChanging(value);
                    ReportPropertyChanging("MessageID");
                    _MessageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageID");
                    OnMessageIDChanged();
                }
            }
        }
        private global::System.Int32 _MessageID;
        partial void OnMessageIDChanging(global::System.Int32 value);
        partial void OnMessageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MessageType
        {
            get
            {
                return _MessageType;
            }
            set
            {
                OnMessageTypeChanging(value);
                ReportPropertyChanging("MessageType");
                _MessageType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MessageType");
                OnMessageTypeChanged();
            }
        }
        private global::System.String _MessageType;
        partial void OnMessageTypeChanging(global::System.String value);
        partial void OnMessageTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message1
        {
            get
            {
                return _Message1;
            }
            set
            {
                OnMessage1Changing(value);
                ReportPropertyChanging("Message1");
                _Message1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message1");
                OnMessage1Changed();
            }
        }
        private global::System.String _Message1;
        partial void OnMessage1Changing(global::System.String value);
        partial void OnMessage1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message2
        {
            get
            {
                return _Message2;
            }
            set
            {
                OnMessage2Changing(value);
                ReportPropertyChanging("Message2");
                _Message2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message2");
                OnMessage2Changed();
            }
        }
        private global::System.String _Message2;
        partial void OnMessage2Changing(global::System.String value);
        partial void OnMessage2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message3
        {
            get
            {
                return _Message3;
            }
            set
            {
                OnMessage3Changing(value);
                ReportPropertyChanging("Message3");
                _Message3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message3");
                OnMessage3Changed();
            }
        }
        private global::System.String _Message3;
        partial void OnMessage3Changing(global::System.String value);
        partial void OnMessage3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message4
        {
            get
            {
                return _Message4;
            }
            set
            {
                OnMessage4Changing(value);
                ReportPropertyChanging("Message4");
                _Message4 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message4");
                OnMessage4Changed();
            }
        }
        private global::System.String _Message4;
        partial void OnMessage4Changing(global::System.String value);
        partial void OnMessage4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Created;
        partial void OnCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BadmintonBuddyModel", Name="Metadata")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Metadata : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Metadata object.
        /// </summary>
        /// <param name="metadataID">Initial value of the MetadataID property.</param>
        /// <param name="metadataType">Initial value of the MetadataType property.</param>
        /// <param name="metadataValue">Initial value of the MetadataValue property.</param>
        /// <param name="clubID">Initial value of the ClubID property.</param>
        public static Metadata CreateMetadata(global::System.Int32 metadataID, global::System.String metadataType, global::System.String metadataValue, global::System.Int32 clubID)
        {
            Metadata metadata = new Metadata();
            metadata.MetadataID = metadataID;
            metadata.MetadataType = metadataType;
            metadata.MetadataValue = metadataValue;
            metadata.ClubID = clubID;
            return metadata;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MetadataID
        {
            get
            {
                return _MetadataID;
            }
            set
            {
                if (_MetadataID != value)
                {
                    OnMetadataIDChanging(value);
                    ReportPropertyChanging("MetadataID");
                    _MetadataID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MetadataID");
                    OnMetadataIDChanged();
                }
            }
        }
        private global::System.Int32 _MetadataID;
        partial void OnMetadataIDChanging(global::System.Int32 value);
        partial void OnMetadataIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MetadataType
        {
            get
            {
                return _MetadataType;
            }
            set
            {
                OnMetadataTypeChanging(value);
                ReportPropertyChanging("MetadataType");
                _MetadataType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MetadataType");
                OnMetadataTypeChanged();
            }
        }
        private global::System.String _MetadataType;
        partial void OnMetadataTypeChanging(global::System.String value);
        partial void OnMetadataTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MetadataValue
        {
            get
            {
                return _MetadataValue;
            }
            set
            {
                OnMetadataValueChanging(value);
                ReportPropertyChanging("MetadataValue");
                _MetadataValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MetadataValue");
                OnMetadataValueChanged();
            }
        }
        private global::System.String _MetadataValue;
        partial void OnMetadataValueChanging(global::System.String value);
        partial void OnMetadataValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClubID
        {
            get
            {
                return _ClubID;
            }
            set
            {
                OnClubIDChanging(value);
                ReportPropertyChanging("ClubID");
                _ClubID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClubID");
                OnClubIDChanged();
            }
        }
        private global::System.Int32 _ClubID;
        partial void OnClubIDChanging(global::System.Int32 value);
        partial void OnClubIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BadmintonBuddyModel", "FK_Metadata_Clubs", "Clubs")]
        public Club Club
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("BadmintonBuddyModel.FK_Metadata_Clubs", "Clubs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("BadmintonBuddyModel.FK_Metadata_Clubs", "Clubs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Club> ClubReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Club>("BadmintonBuddyModel.FK_Metadata_Clubs", "Clubs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Club>("BadmintonBuddyModel.FK_Metadata_Clubs", "Clubs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BadmintonBuddyModel", Name="State")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class State : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new State object.
        /// </summary>
        /// <param name="stateID">Initial value of the StateID property.</param>
        /// <param name="stateName">Initial value of the StateName property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        public static State CreateState(global::System.Int32 stateID, global::System.String stateName, global::System.Int32 countryID)
        {
            State state = new State();
            state.StateID = stateID;
            state.StateName = stateName;
            state.CountryID = countryID;
            return state;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                if (_StateID != value)
                {
                    OnStateIDChanging(value);
                    ReportPropertyChanging("StateID");
                    _StateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StateID");
                    OnStateIDChanged();
                }
            }
        }
        private global::System.Int32 _StateID;
        partial void OnStateIDChanging(global::System.Int32 value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StateName
        {
            get
            {
                return _StateName;
            }
            set
            {
                OnStateNameChanging(value);
                ReportPropertyChanging("StateName");
                _StateName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StateName");
                OnStateNameChanged();
            }
        }
        private global::System.String _StateName;
        partial void OnStateNameChanging(global::System.String value);
        partial void OnStateNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BadmintonBuddyModel", "FK_City_State", "City")]
        public EntityCollection<City> Cities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<City>("BadmintonBuddyModel.FK_City_State", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<City>("BadmintonBuddyModel.FK_City_State", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BadmintonBuddyModel", "FK_State_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("BadmintonBuddyModel.FK_State_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("BadmintonBuddyModel.FK_State_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("BadmintonBuddyModel.FK_State_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("BadmintonBuddyModel.FK_State_Country", "Country", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BadmintonBuddyModel", Name="Surface")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Surface : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Surface object.
        /// </summary>
        /// <param name="surfaceID">Initial value of the SurfaceID property.</param>
        /// <param name="surfaceType">Initial value of the SurfaceType property.</param>
        public static Surface CreateSurface(global::System.Int32 surfaceID, global::System.String surfaceType)
        {
            Surface surface = new Surface();
            surface.SurfaceID = surfaceID;
            surface.SurfaceType = surfaceType;
            return surface;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SurfaceID
        {
            get
            {
                return _SurfaceID;
            }
            set
            {
                if (_SurfaceID != value)
                {
                    OnSurfaceIDChanging(value);
                    ReportPropertyChanging("SurfaceID");
                    _SurfaceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SurfaceID");
                    OnSurfaceIDChanged();
                }
            }
        }
        private global::System.Int32 _SurfaceID;
        partial void OnSurfaceIDChanging(global::System.Int32 value);
        partial void OnSurfaceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SurfaceType
        {
            get
            {
                return _SurfaceType;
            }
            set
            {
                OnSurfaceTypeChanging(value);
                ReportPropertyChanging("SurfaceType");
                _SurfaceType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SurfaceType");
                OnSurfaceTypeChanged();
            }
        }
        private global::System.String _SurfaceType;
        partial void OnSurfaceTypeChanging(global::System.String value);
        partial void OnSurfaceTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BadmintonBuddyModel", "FK_Clubs_Surface", "Clubs")]
        public EntityCollection<Club> Clubs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Club>("BadmintonBuddyModel.FK_Clubs_Surface", "Clubs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Club>("BadmintonBuddyModel.FK_Clubs_Surface", "Clubs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BadmintonBuddyModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BadmintonBuddyModel", Name="UserProfile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserProfile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserProfile object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        public static UserProfile CreateUserProfile(global::System.Int32 userId, global::System.String userName)
        {
            UserProfile userProfile = new UserProfile();
            userProfile.UserId = userId;
            userProfile.UserName = userName;
            return userProfile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BadmintonBuddyModel", "webpages_UsersInRoles", "webpages_Roles")]
        public EntityCollection<webpages_Roles> webpages_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<webpages_Roles>("BadmintonBuddyModel.webpages_UsersInRoles", "webpages_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<webpages_Roles>("BadmintonBuddyModel.webpages_UsersInRoles", "webpages_Roles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BadmintonBuddyModel", Name="webpages_Membership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class webpages_Membership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new webpages_Membership object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="passwordFailuresSinceLastSuccess">Initial value of the PasswordFailuresSinceLastSuccess property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        public static webpages_Membership Createwebpages_Membership(global::System.Int32 userId, global::System.Int32 passwordFailuresSinceLastSuccess, global::System.String password, global::System.String passwordSalt)
        {
            webpages_Membership webpages_Membership = new webpages_Membership();
            webpages_Membership.UserId = userId;
            webpages_Membership.PasswordFailuresSinceLastSuccess = passwordFailuresSinceLastSuccess;
            webpages_Membership.Password = password;
            webpages_Membership.PasswordSalt = passwordSalt;
            return webpages_Membership;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ConfirmationToken
        {
            get
            {
                return _ConfirmationToken;
            }
            set
            {
                OnConfirmationTokenChanging(value);
                ReportPropertyChanging("ConfirmationToken");
                _ConfirmationToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ConfirmationToken");
                OnConfirmationTokenChanged();
            }
        }
        private global::System.String _ConfirmationToken;
        partial void OnConfirmationTokenChanging(global::System.String value);
        partial void OnConfirmationTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsConfirmed
        {
            get
            {
                return _IsConfirmed;
            }
            set
            {
                OnIsConfirmedChanging(value);
                ReportPropertyChanging("IsConfirmed");
                _IsConfirmed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsConfirmed");
                OnIsConfirmedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsConfirmed;
        partial void OnIsConfirmedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsConfirmedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastPasswordFailureDate
        {
            get
            {
                return _LastPasswordFailureDate;
            }
            set
            {
                OnLastPasswordFailureDateChanging(value);
                ReportPropertyChanging("LastPasswordFailureDate");
                _LastPasswordFailureDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPasswordFailureDate");
                OnLastPasswordFailureDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastPasswordFailureDate;
        partial void OnLastPasswordFailureDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastPasswordFailureDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PasswordFailuresSinceLastSuccess
        {
            get
            {
                return _PasswordFailuresSinceLastSuccess;
            }
            set
            {
                OnPasswordFailuresSinceLastSuccessChanging(value);
                ReportPropertyChanging("PasswordFailuresSinceLastSuccess");
                _PasswordFailuresSinceLastSuccess = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordFailuresSinceLastSuccess");
                OnPasswordFailuresSinceLastSuccessChanged();
            }
        }
        private global::System.Int32 _PasswordFailuresSinceLastSuccess;
        partial void OnPasswordFailuresSinceLastSuccessChanging(global::System.Int32 value);
        partial void OnPasswordFailuresSinceLastSuccessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PasswordChangedDate
        {
            get
            {
                return _PasswordChangedDate;
            }
            set
            {
                OnPasswordChangedDateChanging(value);
                ReportPropertyChanging("PasswordChangedDate");
                _PasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordChangedDate");
                OnPasswordChangedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PasswordChangedDate;
        partial void OnPasswordChangedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordVerificationToken
        {
            get
            {
                return _PasswordVerificationToken;
            }
            set
            {
                OnPasswordVerificationTokenChanging(value);
                ReportPropertyChanging("PasswordVerificationToken");
                _PasswordVerificationToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordVerificationToken");
                OnPasswordVerificationTokenChanged();
            }
        }
        private global::System.String _PasswordVerificationToken;
        partial void OnPasswordVerificationTokenChanging(global::System.String value);
        partial void OnPasswordVerificationTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PasswordVerificationTokenExpirationDate
        {
            get
            {
                return _PasswordVerificationTokenExpirationDate;
            }
            set
            {
                OnPasswordVerificationTokenExpirationDateChanging(value);
                ReportPropertyChanging("PasswordVerificationTokenExpirationDate");
                _PasswordVerificationTokenExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordVerificationTokenExpirationDate");
                OnPasswordVerificationTokenExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PasswordVerificationTokenExpirationDate;
        partial void OnPasswordVerificationTokenExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPasswordVerificationTokenExpirationDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BadmintonBuddyModel", Name="webpages_OAuthMembership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class webpages_OAuthMembership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new webpages_OAuthMembership object.
        /// </summary>
        /// <param name="provider">Initial value of the Provider property.</param>
        /// <param name="providerUserId">Initial value of the ProviderUserId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static webpages_OAuthMembership Createwebpages_OAuthMembership(global::System.String provider, global::System.String providerUserId, global::System.Int32 userId)
        {
            webpages_OAuthMembership webpages_OAuthMembership = new webpages_OAuthMembership();
            webpages_OAuthMembership.Provider = provider;
            webpages_OAuthMembership.ProviderUserId = providerUserId;
            webpages_OAuthMembership.UserId = userId;
            return webpages_OAuthMembership;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Provider
        {
            get
            {
                return _Provider;
            }
            set
            {
                if (_Provider != value)
                {
                    OnProviderChanging(value);
                    ReportPropertyChanging("Provider");
                    _Provider = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Provider");
                    OnProviderChanged();
                }
            }
        }
        private global::System.String _Provider;
        partial void OnProviderChanging(global::System.String value);
        partial void OnProviderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProviderUserId
        {
            get
            {
                return _ProviderUserId;
            }
            set
            {
                if (_ProviderUserId != value)
                {
                    OnProviderUserIdChanging(value);
                    ReportPropertyChanging("ProviderUserId");
                    _ProviderUserId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ProviderUserId");
                    OnProviderUserIdChanged();
                }
            }
        }
        private global::System.String _ProviderUserId;
        partial void OnProviderUserIdChanging(global::System.String value);
        partial void OnProviderUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BadmintonBuddyModel", Name="webpages_Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class webpages_Roles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new webpages_Roles object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        public static webpages_Roles Createwebpages_Roles(global::System.Int32 roleId, global::System.String roleName)
        {
            webpages_Roles webpages_Roles = new webpages_Roles();
            webpages_Roles.RoleId = roleId;
            webpages_Roles.RoleName = roleName;
            return webpages_Roles;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BadmintonBuddyModel", "webpages_UsersInRoles", "UserProfile")]
        public EntityCollection<UserProfile> UserProfiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserProfile>("BadmintonBuddyModel.webpages_UsersInRoles", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserProfile>("BadmintonBuddyModel.webpages_UsersInRoles", "UserProfile", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
